package com.gibbon.maxipack;

import java.awt.FileDialog;
import java.awt.Frame;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;

public class MaxiUploadPanel extends javax.swing.JPanel implements PropertyChangeListener {
    
    static MaxiUploadPanel INSTANCE;
    
    //private static JFileChooser chooser = new JFileChooser();
    private static FileDialog dialog;
    
    private String speedString = "0 B/s";
    
    static {
        //chooser.setMultiSelectionEnabled(false);
    }
    
    public MaxiUploadPanel() {
        initComponents();
        INSTANCE = this;
        dialog = new FileDialog((Frame)null, "Upload File", FileDialog.LOAD);
    }
    
    public void propertyChange(PropertyChangeEvent evt) {
        if ("progress".equals(evt.getPropertyName())) {
            barProgress.setValue(((Integer)evt.getNewValue()).intValue());
        }else if ("speed".equals(evt.getPropertyName())){
            speedString = evt.getNewValue().toString();
        }
        
        barProgress.setString(speedString+" ("+barProgress.getValue()+"%)");
    }
    
    public void enterUploadState(){
        barProgress.setVisible(true);
        barProgress.setValue(0);
        btnBrowse.setEnabled(false);
        btnSubmit.setEnabled(false);
        txtPath.setEnabled(false);
    }
    
    public void exitUploadState(){
        barProgress.setVisible(false);
        btnBrowse.setEnabled(true);
        btnSubmit.setEnabled(true);
        txtPath.setEnabled(true);
        txtPath.setText("");
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPath = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        barProgress = new javax.swing.JProgressBar();
        barProgress.setVisible(false);

        setMaximumSize(null);

        btnBrowse.setText("Browse..");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        barProgress.setStringPainted(true);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(barProgress, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .add(txtPath, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, btnSubmit, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, btnBrowse, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnBrowse)
                    .add(txtPath, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(barProgress, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(btnSubmit, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
//        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
//            File f = chooser.getSelectedFile();
//            txtPath.setText(f.toString());
//        }
        dialog.setVisible(true);
        if (dialog.getFile() != null && !dialog.getFile().equals("")){
           txtPath.setText(dialog.getDirectory() + dialog.getFile());
        }
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        File toUpload = new File(txtPath.getText());
        
        if (!toUpload.exists()){
            MaxiApplet.showError("Cannot locate file: "+toUpload);
            return;
        }
        
        if (!toUpload.canRead()){
            MaxiApplet.showError("Cannot read file: "+toUpload);
            return;
        }
        
        // modifies GUI to upload mode
        enterUploadState();
        
        MaxiUploader maxi = new MaxiUploader(toUpload);
        maxi.addPropertyChangeListener(this);
        maxi.execute();
    }//GEN-LAST:event_btnSubmitActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JProgressBar barProgress;
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JTextField txtPath;
    // End of variables declaration//GEN-END:variables

}
