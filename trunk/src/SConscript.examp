libs = [
                    "OIS",
                    "CEGUIBase",
                    "CEGUIOgreRenderer",
                    "OgreMain",
#~                  "fmod",
                    "vorbisfile",
                    "vorbis",
                    "ogg",
                    "pthread"
                ];

libs_path     =   [
    "#bin/debug/obj/audiere",
    "#bin/debug/obj/ogreode",
#~  "/usr/lib/OGRE"
    "/home/t/opt/ogre-1.2/OgreMain/lib"
#~  "/home/t/opt/ogre-1.3/ogrenew/OgreMain/lib"
    ]

include_path        =   [
    "#src/hpp",
    "#src/imp",
#~  "/usr/include/OGRE",
    "/home/t/opt/ogre-1.2/OgreMain/include",
    "/home/t/opt/ogre-1.2/Samples/Common/CEGUIRenderer/include",
#~  "/home/t/opt/ogre-1.3/ogrenew/OgreMain/include",
#~  "/home/t/opt/ogre-1.3/ogrenew/Samples/Common/CEGUIRenderer/include",
    "/usr/include/CEGUI",
    "#external/audiere/src",
    "#external/ois-0.7.2/includes",
    "#external/ogreaddons/ogreode/include",
    "/usr/include/boost"
    ]

Import( "env", "dev", "mode")
localenv = env.Copy()

project = "tsl"

#~ if we are on windows we need to tell gcc to bild a windows exe
#~ we need to set -mwindows as a compiler flag
import sys
if sys.platform == "win32":
    localenv.Tool( "mingw" )
    localenv[ "CCFLAGS" ] += [ "-mwindows" ]

localenv.Append( CPPPATH = include_path,
				LIBPATH = libs_path)
if mode == "release":
    localenv.Append (  
        LIBS = libs + [
            "audiere",
            "ogreode"
            ]
        )
else:
    localenv.Append (  
        LIBS = libs + [
           "audiere_d",
            "ogreode_d"
           ],
#~      CCFLAGS = [
#~          "-W",
#~          "-Wconversion",
#~          "-Wshadow",
#~          "-Wcast-qual",
#~          "-Wwrite-strings"
#~      ]
    )

tgt = localenv.Program(project, dev.DevGetSourceFiles( "cpp", [ "*.cpp" ] ) )
localenv.Alias(project, tgt)
