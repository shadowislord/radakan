release_libs =  [
                    "OIS",
                    "CEGUIBase",
                    "CEGUIOgreRenderer",
                    "OgreMain"
                ];
                
debug_libs  =   [                
                    "OIS",
                    "CEGUIBase",
                    "CEGUIOgreRenderer",
                    "OgreMain"
                ];   
                        
debug_libs_path     =   [
                            "/usr/lib/OGRE"
                        ]
                        
release_libs_path   =   [
                            "/usr/lib/OGRE"
                        ]
                        
include_path        =   [
                            "#external/ogreaddons/ogreode/include",
                            "#external/ogreaddons/ogreode/loader/include",
                            "#external/ogreaddons/ogreode/prefab/include",
                            "#external/ogreaddons/ogreode/tinyxml",
                            "#external/ogreaddons/ogreode/demos/GranTurismOgre/include",
                            "#external/ogreaddons/ogreode/demos/Landscape/include",
                            "#external/ogreaddons/ogreode/demos/SimpleScenes/include",
                            "/usr/include/OGRE",
                            "/usr/include/ode",
                            "#external/ois/includes",
                            "/usr/share/doc/ogre-1.2.4/Samples/Common/include"
                        ]
                        
Import( "env", "dev", "mode")
localenv = env.Copy()

project = "ogreode"

#~ if we are on windows we need to tell gcc to bild a windows exe
#~ we need to set -mwindows as a compiler flag
import sys
if sys.platform == "win32":
    localenv.Tool( "mingw" )
    localenv[ "CCFLAGS" ] += [ "-mwindows" ]

localenv.Append( CPPPATH = include_path)
if mode == "release":
    localenv.Append (  
                        LIBPATH = release_libs_path,
                        LIBS    = release_libs                    
                    )
else:
    localenv.Append (  
                        LIBPATH = debug_libs_path,
                        LIBS    = debug_libs                   
                    )

name = project
if mode == "debug":
    name += "_d"

files = dev.DevGetSourceFiles( "src", [ "*.cpp" ] )
files += dev.DevGetSourceFiles( "loader/src", [ "*.cpp" ]  )
files += dev.DevGetSourceFiles( "prefab/src", [ "*.cpp" ]  )
files += dev.DevGetSourceFiles( "tinyxml", [ "*.cpp" ]  )
files += dev.DevGetSourceFiles( "demos/GranTurismOgre/src", [ "*.cpp" ] )
files += dev.DevGetSourceFiles( "demos/Landscape/src", [ "*.cpp" ]  )
files += dev.DevGetSourceFiles( "demos/SimpleScenes/src", [ "*.cpp" ]  )

tgt = localenv.StaticLibrary( name, files )

localenv.Alias(project, tgt)
