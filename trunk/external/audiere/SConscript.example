Import( "env", "dev", "mode" )
localenv = env.Copy()

project = "audiere"

#~ if we are on windows we need to tell gcc to bild a windows exe
#~ we need to set -mwindows as a compiler flag

include_path        =   [
                            "#external/audiere/src"
                        ]

localenv.Append( CPPPATH = include_path)

import sys
if sys.platform == "win32":
    localenv.Tool( "mingw" )

name = project
if mode == "debug":
    name += "_d"

files = dev.DevGetSourceFiles( "src", [ "basic_source.cpp", \
"cd_null.cpp", \
#~ "cd_unix.cpp", \ need: cdaudio.h
#~ "cd_win32.cpp", \ need: windows.h & mmsystem.h
"debug.cpp", \
"device.cpp", \
#~ "device_al.cpp", \ need: dmedia/audio.h
#~ "device_ds.cpp", \ need: windows.h, mmsystem.h & dsound.h
#~ "device_ds_buffer.cpp", \ need: windows.h, mmsystem.h & dsound.h
#~ "device_ds_stream.cpp", \ need: windows.h, mmsystem.h & dsound.h
"device_mixer.cpp", \
#~ "device_mm.cpp", \ need: windows.h & mmsystem.h
"device_null.cpp", \
"device_oss.cpp", \
"dumb_resample.cpp", \
#~ "dxguid.cpp", \ need: windows.h, mmsystem.h & dsound.h
"file_ansi.cpp", \
#~ "input.cpp", \ need input_flac, input_mod and input_speex
"input_aiff.cpp", \
#~ "input_flac.cpp", \ need: FLAC/seekable_stream_decoder.h
#~ "input_mod.cpp", \ need: dumb.h
"input_mp3.cpp", \
"input_ogg.cpp", \
#~ "input_speex.cpp", \ need: speex.h, speex_header.h, speex_stereo.h & speex_callbacks.h
"input_wav.cpp", \
"loop_point_source.cpp", \
"memory_file.cpp", \
#~ "midi_mci.cpp", \ need: windows.h & mmsystem.h
"midi_null.cpp", \
"noise.cpp", \
"resampler.cpp", \
"sample_buffer.cpp", \
"sound.cpp", \
"sound_effect.cpp", \
"square_wave.cpp", \
"threads_posix.cpp", \
"timer_posix.cpp", \
"tone.cpp", \
"utility.cpp", \
"version.cpp" ]  )

tgt = localenv.StaticLibrary( name, files )
localenv.Alias(project, tgt)
